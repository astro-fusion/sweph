{
	"name": "sweph",
	"version": "2.10.3-4",
	"description": "The definitive Swiss Ephemeris bindings for Node.js",
	"keywords": [
		"sweph",
		"swiss",
		"ephemeris",
		"astrology",
		"astronomy",
		"swisseph",
		"node"
	],
	"homepage": "https://github.com/timotejroiko/sweph",
	"bugs": "https://github.com/timotejroiko/sweph/issues",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/timotejroiko/sweph.git"
	},
	"funding": "https://github.com/timotejroiko/sweph?sponsor=1",
	"license": "(AGPL-3.0-or-later OR LGPL-3.0-or-later)",
	"author": "Timotej Valentin Rojko",
	"exports": {
		"require": "./index.js",
		"import": "./index.mjs",
		"types": "./index.d.ts"
	},
	"main": "index.js",
	"types": "./index.d.ts",
	"files": [
		"./index.js",
		"./index.mjs",
		"./index.d.ts",
		"./constants.js",
		"./binding.gyp",
		"./swisseph",
		"./src/functions",
		"./src/sweph.cpp",
		"./src/sweph.h",
		"./prebuilds"
	],
	"scripts": {
		"preinstall": "node -e \"const path = require('path'); const fs = require('fs'); try { const root = process.cwd(); const srcDir = path.join(root, 'src'); const functionsDir = path.join(srcDir, 'functions'); const functionsFile = path.join(srcDir, 'functions.cpp'); console.log('Creating src directory if needed...'); if (!fs.existsSync(srcDir)) { fs.mkdirSync(srcDir, { recursive: true }); } console.log('Creating src/functions directory if needed...'); if (!fs.existsSync(functionsDir)) { fs.mkdirSync(functionsDir, { recursive: true }); } console.log('Writing functions.cpp file...'); fs.writeFileSync(functionsFile, '#include <sweph.h>\\n', 'utf8'); console.log('Preinstall completed successfully!'); } catch (err) { console.log('Error encountered, attempting fallback method...'); try { if (!fs.existsSync('./src')) { fs.mkdirSync('./src', { recursive: true }); } fs.writeFileSync('./src/functions.cpp', '#include <sweph.h>\\n', 'utf8'); console.log('Fallback successful'); } catch (innerErr) { console.error('Critical error during installation:', innerErr); process.exit(1); } }\"",
		"install": "node -e \"try { require('prebuild-install'); } catch(e) { console.log('Installing prebuild-install...'); require('child_process').execSync('npm install prebuild-install --no-save'); } process.exit(0);\" || prebuild-install || node node_modules/node-gyp/bin/node-gyp.js rebuild", 
		"test": "node -e \"const s = require('./'); const c = s.calc(2222222,0,4); console.log('OK')\""
	},
	"binary": {
		"module_name": "sweph",
		"module_path": "./prebuilds/{platform}-{arch}/",
		"remote_path": "./",
		"package_name": "{module_name}-v{version}-{node_abi}-{platform}-{arch}.tar.gz"
	},
	"dependencies": {
		"node-addon-api": "^8.3.1",
		"prebuild-install": "^7.1.1"
	},
	"devDependencies": {
		"eslint": "^8.44.0",
		"node-gyp": "^11.2.0"
	},
	"packageManager": "yarn@4.9.1+sha512.f95ce356460e05be48d66401c1ae64ef84d163dd689964962c6888a9810865e39097a5e9de748876c2e0bf89b232d583c33982773e9903ae7a76257270986538"
}
